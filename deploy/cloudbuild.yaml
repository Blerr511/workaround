# Access the id_github file from Secret Manager, and setup SSH
steps:
  # Access the id_github file from Secret Manager, and setup SSH
  - name: "gcr.io/cloud-builders/git"
    secretEnv: ["SSH_KEY"]
    entrypoint: "bash"
    env:
      - "PROJECT_ID=${PROJECT_ID}"
      - "_CLOUD_SDK_VERSION=${_CLOUD_SDK_VERSION}"
      - "_ENV=${_ENV}"
      - "_GCP_DOCKER_ARTIFACTS_LOCATION=${_GCP_DOCKER_ARTIFACTS_LOCATION}"
    args:
      - -c
      - |
        ssh-keyscan -t rsa github.com > known_hosts.github
        echo "$$SSH_KEY" >> /root/.ssh/id_rsa
        chmod 400 /root/.ssh/id_rsa
        cp known_hosts.github /root/.ssh/known_hosts
        echo '[url "git@github.com:"]' >> ~/.gitconfig
        echo 'insteadOf = https://github.com/' >> ~/.gitconfig
        echo "Working in project $PROJECT_ID"
        set
    volumes:
      - name: "ssh"
        path: /root/.ssh
  # Unshallow the working copy
  - name: gcr.io/cloud-builders/git
    env:
      - "PROJECT_ID=${PROJECT_ID}"
      - "BRANCH_NAME=${BRANCH_NAME}"
      - "_CLOUD_SDK_VERSION=${_CLOUD_SDK_VERSION}"
      - "_ENV=${_ENV}"
    entrypoint: "bash"
    args:
      - -c
      - |
        isshallow=$(git rev-parse --is-shallow-repository)
        if [[ "t$isshallow" == "ttrue" ]]; then
            echo "Making working copy unshallowed."
            git fetch --unshallow
        else
            echo "Working copy is already full."
        fi
    volumes:
      - name: "ssh"
        path: /root/.ssh

  - name: "$_GCP_DOCKER_ARTIFACTS_LOCATION-docker.pkg.dev/$PROJECT_ID/cloudsdktool/cloud-sdk:$_CLOUD_SDK_VERSION"
    id: prepare-build-system
    entrypoint: "bash"
    env:
      - "BRANCH_NAME=${BRANCH_NAME}"
      - "BUILD_ID=${BUILD_ID}"
      - "COMMIT_SHA=${COMMIT_SHA}"
      - "PROJECT_ID=${PROJECT_ID}"
      - "SHORT_SHA=${SHORT_SHA}"
      - "_TAG=${SHORT_SHA}"
      - "_ENV=${_ENV}"
      - "_CLUSTER=${_CLUSTER}"
      - "BAZEL_RC_PATH=.aspect/bazelrc/${_ENV}/.bazelrc"
    args:
      - "-c"
      - |
        printenv > /workspace/.env;
        gcloud auth print-access-token > /workspace/gcp_token.txt;
        gcloud config get account > /workspace/gcp_account.txt
        chmod +x /workspace/**/*.sh
        GCP_ACC=$(cat /workspace/gcp_account.txt);
        bazel run //tools/gcloud:gcloud -- auth activate-service-account $$GCP_ACC --key-file="/workspace/gcp_token.txt";
        rm /workspace/gcp_token.txt;
        rm /workspace/gcp_account.txt

  - name: "$_GCP_DOCKER_ARTIFACTS_LOCATION-docker.pkg.dev/$PROJECT_ID/cloudsdktool/cloud-sdk:$_CLOUD_SDK_VERSION"
    id: release-wr-logger
    entrypoint: "bash"
    args:
      - "-c"
      - |
        /workspace/deploy/shell/release-npm-package.sh server/packages/logger npm.publish

  - name: "$_GCP_DOCKER_ARTIFACTS_LOCATION-docker.pkg.dev/$PROJECT_ID/cloudsdktool/cloud-sdk:$_CLOUD_SDK_VERSION"
    id: release-backend-api
    entrypoint: "bash"
    args:
      - "-c"
      - |
        /workspace/deploy/shell/release-npm-package.sh server/packages/backend-api npm.publish

  - name: "$_GCP_DOCKER_ARTIFACTS_LOCATION-docker.pkg.dev/$PROJECT_ID/cloudsdktool/cloud-sdk:$_CLOUD_SDK_VERSION"
    id: release-data-source
    entrypoint: "bash"
    args:
      - "-c"
      - |
        /workspace/deploy/shell/release-npm-package.sh server/packages/data-source npm.publish

  - name: "$_GCP_DOCKER_ARTIFACTS_LOCATION-docker.pkg.dev/$PROJECT_ID/cloudsdktool/cloud-sdk:$_CLOUD_SDK_VERSION"
    id: release-wr-ui
    entrypoint: "bash"
    args:
      - "-c"
      - |
        /workspace/deploy/shell/release-npm-package.sh client/packages/ui npm.publish

  - name: "$_GCP_DOCKER_ARTIFACTS_LOCATION-docker.pkg.dev/$PROJECT_ID/cloudsdktool/cloud-sdk:$_CLOUD_SDK_VERSION"
    id: release-wr-core
    entrypoint: "bash"
    args:
      - "-c"
      - |
        /workspace/deploy/shell/release-npm-package.sh client/packages/core npm.publish

  - name: "$_GCP_DOCKER_ARTIFACTS_LOCATION-docker.pkg.dev/$PROJECT_ID/cloudsdktool/cloud-sdk:$_CLOUD_SDK_VERSION"
    id: aws-configure
    entrypoint: "bash"
    args:
      - "-c"
      - |
        /workspace/deploy/shell/configure-aws.sh

  - name: "$_GCP_DOCKER_ARTIFACTS_LOCATION-docker.pkg.dev/$PROJECT_ID/cloudsdktool/cloud-sdk:$_CLOUD_SDK_VERSION"
    id: deploy-general
    entrypoint: "bash"
    env:
      - "_CLUSTER=${_CLUSTER}"
      - "_TAG=${SHORT_SHA}"
    args:
      - "-c"
      - |
        /workspace/deploy/shell/apply-k8s.sh deploy/cluster/general:general.apply

  - name: "$_GCP_DOCKER_ARTIFACTS_LOCATION-docker.pkg.dev/$PROJECT_ID/cloudsdktool/cloud-sdk:$_CLOUD_SDK_VERSION"
    id: deploy-backend
    entrypoint: "bash"
    env:
      - "_CLUSTER=${_CLUSTER}"
      - "_TAG=${SHORT_SHA}"
    args:
      - "-c"
      - |
        /workspace/deploy/shell/apply-k8s.sh deploy/cluster/backend:backend.apply

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/github-ssh-key/versions/latest
      env: "SSH_KEY"
images:
  - "$_GCP_DOCKER_ARTIFACTS_LOCATION-docker.pkg.dev/$PROJECT_ID/cloudsdktool/cloud-sdk:$_CLOUD_SDK_VERSION"
