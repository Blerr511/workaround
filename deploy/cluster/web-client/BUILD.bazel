load("@io_bazel_rules_k8s//k8s:object.bzl", "k8s_object")
load("@io_bazel_rules_k8s//k8s:objects.bzl", "k8s_objects")

# k8s_object(
#     name = "deployement",
#     cluster = "$(_CLUSTER)",
#     image_chroot = "$(GCP_DOCKER_ARTIFACTS_LOCATION)-docker.pkg.dev/$(GCP_PROJECT_ID)/$(GCP_DOCKER_ARTIFACTS_REPOSITORY)",
#     images = {
#         "$(GCP_DOCKER_ARTIFACTS_LOCATION)-docker.pkg.dev/$(GCP_PROJECT_ID)/$(GCP_DOCKER_ARTIFACTS_REPOSITORY)/$(GCP_DOCKER_WEB_CLIENT_IMAGE):{tag}".format(tag = "$(_TAG)"): "//client/apps/web-client:web-client_image",
#     },
#     kind = "deployment",
#     kubeconfig = "//tools/gcloud:kubeconfig",
#     substitutions = {
#         "{ name }": "web-client",
#         "{ image }": "$(GCP_DOCKER_ARTIFACTS_LOCATION)-docker.pkg.dev/$(GCP_PROJECT_ID)/$(GCP_DOCKER_ARTIFACTS_REPOSITORY)/$(GCP_DOCKER_WEB_CLIENT_IMAGE):{tag}".format(tag = "$(_TAG)"),
#         "{ port }": "3000",
#     },
#     template = ":k8s-web-client.deployement.yaml",
#     toolchains = ["//sandbox:gcp_env_vars"],
# )

k8s_object(
    name = "service",
    cluster = "$(_CLUSTER)",
    kind = "service",
    kubeconfig = "//tools/aws:kubeconfig",
    substitutions = {
        "{ name }": "web-client",
        "{ port }": "3000",
    },
    template = ":k8s-web-client.service.yaml",
    toolchains = [
        "//sandbox:gcp_env_vars",
        "//sandbox:workspace_env_vars",
    ],
)

k8s_objects(
    name = "web-client",
    objects = [
        # ":deployement",
        ":service",
    ],
    visibility = ["//visibility:public"],
)
