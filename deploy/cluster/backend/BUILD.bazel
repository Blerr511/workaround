load("@io_bazel_rules_k8s//k8s:object.bzl", "k8s_object")
load("@io_bazel_rules_k8s//k8s:objects.bzl", "k8s_objects")

# Use with inline defining config variables bazel run //.... --define _CLUSTER=... _TAG=...

k8s_object(
    name = "deployement",
    cluster = "$(_CLUSTER)",
    image_chroot = "$(GCP_DOCKER_ARTIFACTS_LOCATION)-docker.pkg.dev/$(GCP_PROJECT_ID)/$(GCP_DOCKER_ARTIFACTS_REPOSITORY)",
    images = {
        "$(GCP_DOCKER_ARTIFACTS_LOCATION)-docker.pkg.dev/$(GCP_PROJECT_ID)/$(GCP_DOCKER_ARTIFACTS_REPOSITORY)/$(GCP_DOCKER_BACKEND_IMAGE):{tag}".format(tag = "$(_TAG)"): "//server/apps/backend:backend_image",
    },
    kind = "deployment",
    kubeconfig = "//tools/gcloud:kubeconfig",
    substitutions = {
        "{ name }": "backend",
        "{ image }": "$(GCP_DOCKER_ARTIFACTS_LOCATION)-docker.pkg.dev/$(GCP_PROJECT_ID)/$(GCP_DOCKER_ARTIFACTS_REPOSITORY)/$(GCP_DOCKER_BACKEND_IMAGE):{tag}".format(tag = "$(_TAG)"),
        "{ cloud_sql_instance }": "$(GCP_CLOUD_SQL_INSTANCE)",
        "{ backend_port }": "3000",
    },
    template = ":k8s-backend.deployement.yaml",
    toolchains = ["//sandbox:gcp_env_vars"],
)

genrule(
    name = "create_backend_secret_yaml",
    srcs = [
        "k8s-backend.secret.yaml",
        "//sandbox/gcp/cloud-sql:sa.base64",
    ],
    outs = ["k8s-backend.secret.gen.yaml"],
    cmd = "sed 's/{ sa_base64 }/'\"$$(cat $(location //sandbox/gcp/cloud-sql:sa.base64))\"'/' $(location k8s-backend.secret.yaml) > $@",
)

k8s_object(
    name = "secret",
    cluster = "$(_CLUSTER)",
    kind = "secret",
    kubeconfig = "//tools/gcloud:kubeconfig",
    template = ":create_backend_secret_yaml",
    toolchains = ["//sandbox:gcp_env_vars"],
)

k8s_object(
    name = "service",
    cluster = "$(_CLUSTER)",
    kind = "service",
    kubeconfig = "//tools/gcloud:kubeconfig",
    substitutions = {
        "{ name }": "backend",
        "{ backend_port }": "3000",
    },
    template = ":k8s-backend.service.yaml",
    toolchains = ["//sandbox:gcp_env_vars"],
)

k8s_objects(
    name = "backend",
    objects = [
        ":deployement",
        ":secret",
        ":service",
    ],
    visibility = ["//visibility:public"],
)
