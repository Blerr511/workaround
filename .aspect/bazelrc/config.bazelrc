# WORKSPACE
build --action_env=APP_ENV=dev
build --action_env=PY_VENV="/tmp/.wr/.py_virtualenv"
build --action_env=KUBE_CONFIG="/tmp/.wr/.kube/config"

# build --workspace_status_command=./tools/git/commit_hash.sh

# GCP
build --action_env=GCP_PROJECT_ID=wr-dev-393622
build --action_env=GCP_PROJECT_NAME=wr-dev
build --action_env=GCP_REGION=europe-central2
build --action_env=GCP_CLOUDSDK_CONFIG="/tmp/.wr/.config/gcloud/$(APP_ENV)"
build --action_env=GCP_CLOUD_SQL_SA=
build --action_env=GCP_CLOUD_SQL_SA_SECRET=
build --action_env=GCP_CLOUD_SQL_INSTANCE=
build --action_env=GCP_TERRAFORM_BUCKET="$(GCP_PROJECT_NAME)-terraform"
build --action_env=GCP_TERRAFORM_SA="terraform-sa"
build --action_env=GCP_TERRAFORM_SA_SECRET="terraform-sa"
build --action_env=GCP_CLOUD_BUILD_SA=
build --action_env=GCP_CLOUD_BUILD_SA_SECRET=
build --action_env=GCP_DEVELOPMENT_SA="development-sa"
build --action_env=GCP_DEVELOPMENT_SA_SECRET="development-sa"
build --action_env=GCP_CLOUD_BUILD_SDK_VERSION="7.0.1"
build --action_env=GCP_GITHUB_SSH_KEY_SECRET_NAME="github-ssh-key"
build --action_env=GCP_ARTIFACTS_READER_SA=artifacts-reader
build --action_env=GCP_ARTIFACTS_READER_SA_SECRET=artifacts-reader-sa

# AWS
build --action_env=AWS_DEFAULT_REGION="eu-north-1"
build --action_env=AWS_CONFIG_FILE=/tmp/.wr/.aws_config
# Specify on your local.bazelrc file
build --action_env=AWS_DEFAULT_ACCESS_KEY_ID=
build --action_env=AWS_DEFAULT_ACCESS_KEY_SECRET=
## EC2
build --action_env=AWS_EC2_INSTANCE_ID=i-03717b829f59c4e8f
build --action_env=AWS_EC2_INSTANCE_SSH_PATH=ubuntu@ec2-16-171-224-221.eu-north-1.compute.amazonaws.com
# Define it on your local.bazelrc file
build --action_env=AWS_EC2_SSH_KEY_PATH=
build --action_env=AWS_EKS_CLUSTER_NAME=wr
## RDS
build --action_env=AWS_RDS_POSTGRES_NAME=datasource
build --action_env=AWS_RDS_POSTGRES_DB_NAME=data_source
build --action_env=AWS_RDS_POSTGRES_USERNAME=data-source-user
build --action_env=AWS_RDS_POSTGRES_PASSWORD=
=

# GCP artifacts
build --action_env=GCP_NPM_ARTIFACTS_SCOPE=
build --action_env=GCP_NPM_ARTIFACTS_REPOSITORY=
build --action_env=GCP_NPM_ARTIFACTS_LOCATION=

# GCP docker artifacts
build --action_env=GCP_DOCKER_ARTIFACTS_REPOSITORY=
build --action_env=GCP_DOCKER_ARTIFACTS_LOCATION=

# Docker image names
build --action_env=GCP_DOCKER_BACKEND_IMAGE=
build --action_env=GCP_DOCKER_WEB_CLIENT_IMAGE=

# GKE cluster config
build --action_env=GKE_CLUSTER_NAME_SHORT=
build --action_env=GKE_CLUSTER_LOCATION=
build --action_env=GKE_CLUSTER_NAME=
build --action_env=GKE_CLUSTER_LOCATION_ROOT=

# AUTHZ
build --action_env=AUTHZ_DOMAIN=
build --action_env=AUTHZ_CLIENT_ID=
build --action_env=AUTHZ_CLIENT_SECRET=

# POSTGRES SERVICE
build --action_env=POSTGRES_HOST=localhost
build --action_env=POSTGRES_PORT=6432
build --action_env=POSTGRES_USERNAME=wruser
build --action_env=POSTGRES_PASSWORD=wrpass
build --action_env=POSTGRES_DATABASE=wr
build --action_env=POSTGRES_URL="postgresql://$(POSTGRES_USERNAME):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DATABASE)"

# REDIS
build --action_env=REDIS_HOST=localhost
build --action_env=REDIS_PORT=8379

# WEB-CLIENT

build --action_env=WEB_CLIENT_AUTHZ_DOMAIN=$(AUTHZ_DOMAIN)
build --action_env=WEB_CLIENT_AUTHZ_CLIENT_ID=$(AUTHZ_CLIENT_ID)

# DATA-SOURCE
build --action_env=DATA_SOURCE_POSTGRES_URL="postgresql://$(POSTGRES_USERNAME):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DATABASE)?schema=public"

# AUTH
build --action_env=AUTH_WEB_EXPOSE_HOST=localhost
build --action_env=AUTH_WEB_EXPOSE_PORT=3002
build --action_env=AUTH_POSTGRES_HOST=$(POSTGRES_HOST)
build --action_env=AUTH_POSTGRES_PORT=$(POSTGRES_PORT)
build --action_env=AUTH_POSTGRES_USERNAME=$(POSTGRES_USERNAME)
build --action_env=AUTH_POSTGRES_PASSWORD=$(POSTGRES_PASSWORD)
build --action_env=AUTH_POSTGRES_DATABASE=wrauth
build --action_env=AUTH_POSTGRES_SCHEMA=public
build --action_env=AUTH_JWT_SECRET=qazedfrtgb4567
build --action_env=AUTH_JWT_LIFE_SECONDS=3600
## AUTH0
### specify it on your local.bazelrc file
build --action_env=AUTH_AUTHZ_DOMAIN=$(AUTHZ_DOMAIN)
build --action_env=AUTH_AUTHZ_CLIENT_ID=$(AUTHZ_CLIENT_ID)
build --action_env=AUTH_AUTHZ_CLIENT_SECRET=$(AUTHZ_CLIENT_SECRET)

# BACKEND
build --action_env=BACKEND_WEB_EXPOSE_HOST=localhost
build --action_env=BACKEND_WEB_EXPOSE_PORT=3001
build --action_env=BACKEND_AUTH_API_HOST=$(AUTH_WEB_EXPOSE_HOST)
build --action_env=BACKEND_AUTH_API_PORT=$(AUTH_WEB_EXPOSE_PORT)
build --action_env=BACKEND_POSTGRES_HOST=$(POSTGRES_HOST)
build --action_env=BACKEND_POSTGRES_PORT=$(POSTGRES_PORT)
build --action_env=BACKEND_POSTGRES_USERNAME=$(POSTGRES_USERNAME)
build --action_env=BACKEND_POSTGRES_PASSWORD=$(POSTGRES_PASSWORD)
build --action_env=BACKEND_POSTGRES_DATABASE=$(POSTGRES_DATABASE)
build --action_env=BACKEND_AUTH_API_URL=http://$(AUTH_WEB_EXPOSE_HOST):$(AUTH_WEB_EXPOSE_PORT)/api
build --action_env=BACKEND_AUTH_VERIFY_WEBHOOK_URL=http://$(AUTH_WEB_EXPOSE_HOST):$(AUTH_WEB_EXPOSE_PORT)/api/authentication/verify

# Image Gen service

# Fill it in your local.bazelrc file
build --action_env=IMAGE_GEN_OPENAI_API_KEY=

# Prompt service

# Fill it in your local.bazelrc file
build --action_env=PROMPT_OPENAI_API_KEY=
build --action_env=PROMPT_REDIS_HOST=$(REDIS_HOST)
build --action_env=PROMPT_REDIS_PORT=$(REDIS_PORT)
build --action_env=PROMPT_REDIS_DB=1

import %workspace%/.aspect/bazelrc/cloud/.bazelrc
