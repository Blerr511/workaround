load("//sandbox/gcp:defs.bzl", "secret_version")

sh_binary(
    name = "active_cloud_builder_sa",
    srcs = [
        "//sandbox/gcp/secrets:gcp_cloud_builder_sa",
        "//tools/gcloud:gcloud_cli",
    ],
    args = [
        "auth",
        "activate-service-account",
        "--key-file=$(location //sandbox/gcp/secrets:gcp_cloud_builder_sa)",
    ],
    data = [
        ":gcp_cloud_builder_sa",
    ],
    env = {
        "CLOUDSDK_CONFIG": "$(GCP_CLOUDSDK_CONFIG)",
        "PROJECT_ID": "$(GCP_PROJECT_ID)",
    },
    toolchains = [
        "//sandbox:workspace_env_vars",
        "//sandbox:gcp_env_vars",
    ],
)

sh_binary(
    name = "bastion.connect",
    srcs = ["shell/connect-bastion.sh"],
    args = [
        "$(location :gcp_bastion_ssh_key)",
        "$(location :gcp_bastion_instance_id)",
    ],
    data = [
        ":gcp_bastion_instance_id",
        ":gcp_bastion_ssh_key",
    ],
    env = {
        "AWS_CONFIG_FILE": "$(AWS_CONFIG_FILE)",
        "AWS_SHARED_CREDENTIALS_FILE": "$(AWS_SHARED_CREDENTIALS_FILE)",
    },
    toolchains = ["//sandbox:workspace_env_vars"],
)

sh_binary(
    name = "bastion.proxy",
    srcs = ["shell/proxy-bastion.sh"],
    args = [
        "$(location :gcp_bastion_ssh_key)",
        "$(location //deploy/cluster/backend:aws_rds_connection_host)",
        "$(location :gcp_bastion_instance_id)",
    ],
    data = [
        ":gcp_bastion_instance_id",
        ":gcp_bastion_ssh_key",
        "//deploy/cluster/backend:aws_rds_connection_host",
    ],
    env = {
        "LOCAL_PORT": "7432",
        "WR_TMP_DATA": "$(WR_TMP_DATA)",
        "AWS_CONFIG_FILE": "$(AWS_CONFIG_FILE)",
        "AWS_SHARED_CREDENTIALS_FILE": "$(AWS_SHARED_CREDENTIALS_FILE)",
    },
    toolchains = ["//sandbox:workspace_env_vars"],
)

sh_binary(
    name = "bastion.proxy_drop",
    srcs = ["shell/drop-bastion-proxy.sh"],
    args = [
        "$(location :gcp_bastion_instance_id)",
    ],
    data = [
        ":gcp_bastion_instance_id",
    ],
    env = {
        "LOCAL_PORT": "7432",
        "WR_TMP_DATA": "$(WR_TMP_DATA)",
        "AWS_CONFIG_FILE": "$(AWS_CONFIG_FILE)",
        "AWS_SHARED_CREDENTIALS_FILE": "$(AWS_SHARED_CREDENTIALS_FILE)",
    },
    toolchains = ["//sandbox:workspace_env_vars"],
)
