load("@npm//:defs.bzl", "npm_link_all_packages")
load("@aspect_rules_js//js:defs.bzl", "js_binary")
load("@aspect_rules_ts//ts:defs.bzl", "ts_config", "ts_project")
load("//tools/utils:js_image.bzl", "js_image")

npm_link_all_packages(name = "node_modules")

filegroup(
    name = "project_support_files",
    srcs = glob([
        "*.js",
        ".*.js",
        ".*.yaml",
        "*.yaml",
    ]),
)

srcs = glob(
    [
        "src/**/*.ts",
        "test/**/*.ts",
    ],
)

data = ["project_support_files"]

deps = [
    ":node_modules",
]

ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
)

ts_project(
    name = "ts",
    srcs = srcs,
    data = data,
    declaration = True,
    incremental = True,
    source_map = True,
    tsconfig = ":tsconfig",
    validate = True,
    visibility = ["//visibility:public"],
    deps = deps,
)

js_binary(
    name = "start",
    data = [
        ":ts",
    ],
    entry_point = ":src/main.js",
    env = {
        "WEB_EXPOSE_HOST": "$(AUTH_WEB_EXPOSE_HOST)",
        "WEB_EXPOSE_PORT": "$(AUTH_WEB_EXPOSE_PORT)",
    },
    toolchains = ["//sandbox:auth_env_vars"],
)

js_image(
    name = "auth",
    srcs = [":ts"],
    image = "$(GCP_DOCKER_AUTH_IMAGE)",
    package_json = "package.json",
    start_cmd = "node src/main.js",
    deps = [
        "//server/packages/logger:logger.json",
    ],
)
