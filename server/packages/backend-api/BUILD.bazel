load("@npm//:defs.bzl", "npm_link_all_packages")
load("@aspect_rules_js//js:defs.bzl", "js_binary")
load("@aspect_rules_ts//ts:defs.bzl", "ts_config", "ts_project")
load("@aspect_rules_js//npm:defs.bzl", "npm_package")
load("@npm//server/packages/backend-api:@graphql-codegen/cli/package_json.bzl", codegen = "bin")
load("//tools/bazel/copy-to-source:defs.bzl", "copy_to_source")
load("@aspect_rules_js//js:defs.bzl", "js_binary", "js_run_binary")

npm_link_all_packages(name = "node_modules")

filegroup(
    name = "project_support_files",
    srcs = glob([
        "*.json",
        ".*.json",
        "*.js",
        ".*.js",
    ]),
)

srcs = glob(
    [
        "src/**/*.ts",
    ],
)

data = ["project_support_files"]

deps = [
    ":node_modules/@graphql-codegen/cli",
    "//:node_modules",
]

ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
)

ts_project(
    name = "ts",
    srcs = [
        "src/generate.ts",
    ],
    data = [
        ":tsconfig",
    ],
    declaration = True,
    incremental = False,
    source_map = True,
    tsconfig = ":tsconfig",
    validate = True,
    deps = deps,
)

js_binary(
    name = "generate",
    # chdir = "../../..",
    data = [
        ":ts",
    ] + ["//server/apps/gateway:schema"],
    entry_point = ":src/generate.js",
    env = {
        "SCHEMA_PATH": "$(rootpath //server/apps/gateway:schema)",
        "OUTPUT": "src/__generated__/gql-types.ts",
    },
)

# make this library available via node_modules
npm_package(
    name = "backend-api",
    srcs = [
        "package.json",
        ":ts",
    ],
    # This is a perf improvement; the default will be flipped to False in rules_js 2.0
    include_runfiles = False,
    visibility = ["//visibility:public"],
)

sh_binary(
    name = "npm.publish",
    srcs = [
        "//tools/npm:npm_cli",
    ],
    args = [
        "publish",
        "$(location :backend-api)",
        # "--dry-run",
    ],
    data = [
        ":backend-api",
        "//tools/gcloud:npmrc",
    ],
    env = {
        "NPM_CONFIG_USERCONFIG": "$(location //tools/gcloud:npmrc)",
    },
    tags = ["requires-network"],
)

filegroup(
    name = "backend-api.json",
    srcs = [":package.json"],
    visibility = ["//visibility:public"],
)

codegen.gql_gen_binary(
    name = "codegen",
)

js_run_binary(
    name = "gen",
    copy_srcs_to_bin= False,
    srcs = [
        "codegen.yaml",
        "//server/apps/gateway:schema",
    ],
    outs = ["__generated__/apollo-gql.ts"],
    args = [
        "-c",
        "$(location codegen.yaml)",
    ],
    include_npm_linked_packages = False,
    tool = ":codegen",
)

copy_to_source(
    name = "genn",
    data = [":gen"],
    destionation = "{}/src/__generated__".format(package_name()),
    source = "$(location :gen)",
)
